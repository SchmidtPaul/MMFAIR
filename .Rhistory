data    = dat,
weights = varIdent(form=~1|date),
REML = TRUE)
mod2.glmm <- glmmTMB::glmmTMB(formula =  yield ~ gen * date * densf,
data    = dat,
weights = diag(date),
REML = TRUE)
mod2.glmm <- glmmTMB::glmmTMB(formula =  yield ~ gen * date * densf,
data    = dat,
weights = diag(1|date),
REML = TRUE)
mod2.glmm <- glmmTMB::glmmTMB(formula =  yield ~ gen * date * densf,
data    = dat,
weights = diag(date),
REML = TRUE)
setwd("D:/Coding/MMFAIR")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
# packages for better formatting tables for html output
library(kableExtra)
library(formattable)
pacman::p_load(dplyr, tibble, # packages for data handling
nlme, lme4, glmmTMB, sommer) # packages for mixed models
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
boxplot(yield ~ date,    data=dat)
boxplot(yield ~ density, data=dat)
tibble(Model = paste0("mod", 1:4) %>% cell_spec(bold=T),
Block    = "Identity",
Genotype = "Identity",
Density  = c("Identity", "Identity", "Diagonal", "Diagonal"),
Date     = c("Identity", "Diagonal", "Identity", "Diagonal")) %>%
mutate(Density = ifelse(Density=="Diagonal", cell_spec(Density, bold=T), Density),
Date    = ifelse(   Date=="Diagonal", cell_spec(Date,    bold=T), Date)) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
add_header_above(c(" ", "Term in multiplicative variance structure"=4))
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf)) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
dat.id <- dat %>%
mutate(id = 1:n() %>% as.factor) # new column with running number
mod1.glmm <- glmmTMB(formula =  yield ~ gen * date * densf + (1|block),
REML    = TRUE,
data    = dat.id) # default = homoscedastic error variance
mod1b.glmm <- mod1.glmm %>%
update(.~. + (1|id),   # add random term to mimic homoscedastic error variance
dispformula=~0) # fix original error variance to 0
mod2.glmm <- mod1.glmm %>%
update(.~. + diag(date+0|id), dispformula=~0)
mod3.glmm <- mod1.glmm %>%
update(.~. + diag(densf+0|id), dispformula=~0)
mod4.glmm <- mod1.glmm %>%
update(.~. + diag(densf:date+0|id), dispformula=~0)
mod1.glmm %>% VarCorr
mod1b.glmm %>% VarCorr()
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod1.glmm.VC <- mod1.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var")
mod4.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var") %>%
separate(grp, sep=":", into=c("grp1","grp2"))
?enframe
mod1.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp"))
# packages for better formatting tables for html output
library(kableExtra)
library(formattable)
pacman::p_load(broom.mixed, dplyr, purrr, tibble, tidyr, # for data handling
nlme, lme4, glmmTMB, sommer) # packages for mixed models
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
boxplot(yield ~ date,    data=dat)
boxplot(yield ~ density, data=dat)
tibble(Model = paste0("mod", 1:4) %>% cell_spec(bold=T),
Block    = "Identity",
Genotype = "Identity",
Density  = c("Identity", "Identity", "Diagonal", "Diagonal"),
Date     = c("Identity", "Diagonal", "Identity", "Diagonal")) %>%
mutate(Density = ifelse(Density=="Diagonal", cell_spec(Density, bold=T), Density),
Date    = ifelse(   Date=="Diagonal", cell_spec(Date,    bold=T), Date)) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
add_header_above(c(" ", "Term in multiplicative variance structure"=4))
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf)) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
dat.id <- dat %>%
mutate(id = 1:n() %>% as.factor) # new column with running number
mod1.glmm <- glmmTMB(formula =  yield ~ gen * date * densf + (1|block),
REML    = TRUE,
data    = dat.id) # default = homoscedastic error variance
mod1b.glmm <- mod1.glmm %>%
update(.~. + (1|id),   # add random term to mimic homoscedastic error variance
dispformula=~0) # fix original error variance to 0
mod2.glmm <- mod1.glmm %>%
update(.~. + diag(date+0|id), dispformula=~0)
mod3.glmm <- mod1.glmm %>%
update(.~. + diag(densf+0|id), dispformula=~0)
mod4.glmm <- mod1.glmm %>%
update(.~. + diag(densf:date+0|id), dispformula=~0)
mod1.glmm %>% VarCorr
mod1b.glmm %>% VarCorr()
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod1.glmm.VC <- mod1.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="Residual")
mod1.glmm.VC <- mod1.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="Residual")
mod1.glmm.VC
mod2.glmm %>% AIC
library(pacman)
p_load(tidyr,
broom.mixed,
nlme, glmmTMB)
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.glmm <- glmmTMB::glmmTMB(formula =  yield ~ gen * date * densf,
data    = dat,
weights = diag(date),
REML = TRUE)
mod2.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date)))  # one error variance per date
mod3.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf))) # one error variance per density
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
# VC mod1
tibble(grp="all", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
dat2 <- dat %>%
mutate(id=as.factor(1:n()))
mod1.nlme %>% VarCorr
mod1.glmm %>% VarCorr
mod1.glmm <- glmmTMB(formula = yield ~ gen * date * densf + (1|block),
data = dat2,
REML=TRUE)
mod1.glmm %>%
tidy(effects="ran_pars") %>%
mutate(var=case_when(substr(term,1,2)=="sd"~estimate**2,
T~as.double(NA)))
mod2.glmm <- glmmTMB(formula = yield ~ gen * date * densf + (1|block) + diag(densf + 0|id),
dispformula=~0,
data = dat2,
REML=TRUE)
mod2b.glmm <- mod1.glmm %>% update(.~. + diag(densf + 0|id), dispformula=~0)
x <- mod4.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var")
mod3.glmm <- glmmTMB(formula =  yield ~ gen * date * densf +
(1|block) + diag(1:date+0|id),
dispformula=~0,
REML    = TRUE,
data    = dat.id) # default = homoscedastic error variance
mod3.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var") %>%
separate(grp, sep=":", into=c("grp1","grp2"))
mod3.glmm <- glmmTMB(formula = yield ~ gen * date * densf + (1|block) + diag(densf + 0|id),
dispformula=~0,
data = dat2,
REML=TRUE)
mod3.glmm %>% logLik
mod3.glmm %>% logLik(.) %>% `*`(2) %>% as.double
mod3.glmm %>% AIC
mod3.glmm %>% VarCorr
mod3.glmm %>% tidy(effects="ran_pars")
mod3.glmm %>%
tidy(effects="ran_pars") %>%
mutate(var=case_when(substr(term,1,2)=="sd"~estimate**2,
T~as.double(NA)))
# VC mod2
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
# VC mod3
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod1.nlme %>% summary
mod1.nlme$sigma
-2*logLik(mod1.nlme) %>% as.double %>% round(2)
-2*logLik(mod2.nlme) %>% as.double %>% round(2)
-2*logLik(mod3.nlme) %>% as.double %>% round(2)
-2*logLik(mod4.nlme) %>% as.double %>% round(2)
attr(logLik(mod1.nlme), "df")
x <- logLik(mod1.nlme)
attributes(logLik(mod1.nlme))
tibble(Deviance = -2*logLik(c(mod1.nlme,mod2.nlme,mod3.nlme,mod4.nlme)))
sapply(c(mod1.nlme,mod2.nlme,mod3.nlme,mod4.nlme), -2*logLik)
sapply(list(mod1.nlme,mod2.nlme,mod3.nlme,mod4.nlme), function(x) lapply(x, -2*logLik(x)))
sapply(list(mod1.nlme,mod2.nlme,mod3.nlme,mod4.nlme),
function(x){-2*logLik(x) %>% as.double},
simplify=TRUE)
mod2.nlme$call$weights
mod2.nlme %>% logLik
# packages for better formatting tables for html output
library(kableExtra)
library(formattable)
pacman::p_load(broom.mixed, dplyr, purrr, tibble, tidyr, # for data handling
nlme, lme4, glmmTMB, sommer) # packages for mixed models
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
boxplot(yield ~ date,    data=dat)
boxplot(yield ~ density, data=dat)
tibble(Model = paste0("mod", 1:4) %>% cell_spec(bold=T),
Block    = "Identity",
Genotype = "Identity",
Density  = c("Identity", "Identity", "Diagonal", "Diagonal"),
Date     = c("Identity", "Diagonal", "Identity", "Diagonal")) %>%
mutate(Density = ifelse(Density=="Diagonal", cell_spec(Density, bold=T), Density),
Date    = ifelse(   Date=="Diagonal", cell_spec(Date,    bold=T), Date)) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("striped", "hover"),
full_width = FALSE) %>%
add_header_above(c(" ", "Term in multiplicative variance structure"=4))
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf)) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
dat.id <- dat %>%
mutate(id = 1:n() %>% as.factor) # new column with running number
mod1.glmm <- glmmTMB(formula =  yield ~ gen * date * densf + (1|block),
REML    = TRUE,
data    = dat.id) # default = homoscedastic error variance
mod1b.glmm <- mod1.glmm %>%
update(.~. + (1|id),   # add random term to mimic homoscedastic error variance
dispformula=~0) # fix original error variance to 0
mod2.glmm <- mod1.glmm %>%
update(.~. + diag(date+0|id), dispformula=~0)
mod3.glmm <- mod1.glmm %>%
update(.~. + diag(densf+0|id), dispformula=~0)
mod4.glmm <- mod1.glmm %>%
update(.~. + diag(densf:date+0|id), dispformula=~0)
mod1.glmm %>% VarCorr
mod1b.glmm %>% VarCorr()
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod1.glmm.VC <- mod1.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="Residual")
mod1.glmm.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod2.glmm.VC <- mod2.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var")
mod2.glmm.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod3.glmm.VC <- mod3.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var")
mod3.glmm.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod4.glmm.VC <- mod4.glmm %>%
tidy(effects="ran_pars", scales="vcov") %>%
separate(term, sep="__", into=c("term","grp")) %>%
filter(group=="id", term=="var") %>%
separate(grp, sep=":", into=c("grp1","grp2"))
mod4.glmm.VC %>%
mutate_if(is.double, round, 3) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod1.nlme %>% AIC # AIC
-2 * logLik(mod1.nlme) %>% # Deviance
as.double
tibble(Model = paste0("mod", 1:4),
AIC = AIC(mod1.nlme,mod2.nlme,mod3.nlme,mod4.nlme)$AIC,
Deviance = -2 * c(mod1.nlme %>% logLik,
mod2.nlme %>% logLik,
mod3.nlme %>% logLik,
mod4.nlme %>% logLik) %>% as.double) %>%
kable(escape = FALSE) %>%
kable_styling(bootstrap_options = c("bordered", "hover"),
full_width = FALSE)
mod1.glmm %>% AIC # AIC
mod1.glmm %>% AIC
mod1.glmm %>% glance
setwd("D:/Coding/MMFAIR")
library("rmarkdown")
rmarkdown::clean_site()  # delete old files
rmarkdown::render_site(encoding="UTF-8") # render all files new; UTF-8 for ä, ö, ü, ß
