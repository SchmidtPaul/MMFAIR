tibble(grp = mod1.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE),
sigma = mod1.nlme$sigma,
varStruct = 1) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
tibble(grp = mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE),
sigma = mod2.nlme$sigma,
varStruct = 1) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble(grp = .,
sigma = mod2.nlme$sigma,
varStruct = 1) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble(grp = names(.),
sigma = mod2.nlme$sigma,
varStruct = .) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble(grp = names(.),
sigma = mod2.nlme$sigma,
varStruct = .) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
mod3.nlme
mod4.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme$modelStruct
mod4.nlme$modelStruct$varStruct
x <- mod4.nlme$modelStruct$varStruct
x$A
mod4.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE)
m2.varStruct <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
tibble(grp = m2.varStruct %>% names,
sigma = mod2.nlme$sigma,
varStruct = m2.varStruct) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.varStruct <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble(grp = mod3.nlme.varStruct %>% names,
sigma = mod3.nlme$sigma,
varStruct = mod3.nlme.varStruct) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.varStruct <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE)
tibble(grp = mod3.nlme.varStruct %>% names,
sigma = mod3.nlme$sigma,
varStruct = mod3.nlme.varStruct) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.B
combn(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names)
mod4.nlme.varStruct.A %>% names
combn(c(mod4.nlme.varStruct.A %>% names, mod4.nlme.varStruct.B %>% names))
combn(c(mod4.nlme.varStruct.A %>% names, mod4.nlme.varStruct.B %>% names), 2)
combn(c(mod4.nlme.varStruct.A %>% names, mod4.nlme.varStruct.B %>% names), 1)
expand.grid(c(mod4.nlme.varStruct.A %>% names, mod4.nlme.varStruct.B %>% names))
expand.grid(mod4.nlme.varStruct.A %>% names, mod4.nlme.varStruct.B %>% names)
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
mod3.nlme.varStruct %>% names
mod4.nlme$sigma
x <- mod4.nlme$modelStruct$varStruct
x %>% as_tibble(rownames = T)
x %>% enframe
x %>% enframe()
x %>% tibble::enframe()
x %>% stack
x <- mod4.nlme$modelStruct$varStruct$A
x %>% tibble::enframe()
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.A %>% tibble::enframe()
mod4.nlme.varStruct.A %>% stack()
mod2.nlme.varStruct <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>% enframe
mod2.nlme.varStruct <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>% tibble::enframe
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>% tibble::enframe()
mod2.nlme.varStruct <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct")
mod2.nlme.varStruct
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma = mod2.nlme$sigma)
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
tibble(grp = "all",
sigma = mod1.nlme$sigma,
varStruct = 1) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
tibble(grp = "all",
varStruct = 1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
library(pacman)
p_load(dplyr, purrr,
broom.mixed,
nlme)
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
mod1.nlme <- nlme::gls(model   = yield ~ block + gen * date * densf,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf))) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date)))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
tibble(grp = "all",
varStruct = 1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme$sigma
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.B
mod4.nlme.varStruct.A %>% tibble::enframe()
mod4.nlme.varStruct.A %>% stack()
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names)
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
mod3.nlme.varStruct %>% names
mod4.nlme.varStruct.A %>% tibble::enframe()
mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct")
mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
mod4.nlme$modelStruct$varStruct
mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x = mod4.nlme.VC,
y = mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA"),
by = "grpA")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x = mod4.nlme.VC,
y = mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA"),
by = "grpA")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
left_join(x = mod4.nlme.VC,
y = mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA"),
by = "grpA")
mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names)
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names) %>%
rename(grpA=Var1, grpB=Var2)
mod4.varStructA <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.varStructB <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
left_join(x = mod4.nlme.VC,
y = mod4.varStructA,
by = "grpA")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names,stringsAsFactors = F) %>%
rename(grpA=Var1, grpB=Var2)
mod4.varStructA <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.varStructB <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
left_join(x = mod4.nlme.VC,
y = mod4.varStructA,
by = "grpA")
left_join(x = mod4.nlme.VC,
y = mod4.varStructA,
by = "grpA") %>%
left_join(x = .,
y = mod4.varStructB,
by ="grpB")
expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names,
stringsAsFactors = FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.varStructA <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.varStructB <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB")
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme$sigma
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme$sigma
mod4.nlme
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme$sigma
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme$sigma
mod4.nlme
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme
library(pacman)
p_load(dplyr, purrr,
broom.mixed,
nlme)
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
mod1.nlme <- nlme::gls(model   = yield ~ block + gen * date * densf,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf))) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date)))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod4.nlme$sigma
VarCorr(mod4.nlme)
mod3.nlme
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme$sigma
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mod3.nlme$sigma
mod4.nlme$sigma
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB)
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
# VC mod3
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
dat
mod4.nlme %>% broom
mod4.nlme %>% broom
mod4.nlme %>% broom.mixed::tidy()
mod4.nlme %>% broom.mixed::tidy(effects="ran_pars")
mod4.nlme %>% broom.mixed::glance()
mod4.nlme %>% broom.mixed::stdranef
mod4.nlme %>% broom.mixed::stdranef()
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod1.nlme.VC <- tibble(grp="all", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod1.nlme.VC
library(pacman)
p_load(dplyr, purrr,
broom.mixed,
nlme)
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = as.factor(density))
mod1.nlme <- nlme::gls(model   = yield ~ block + gen * date * densf,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf))) # one error variance per density
mod3.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date)))  # one error variance per date
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|densf), # one error variance per
varIdent(form=~1|date))) # density-date combination
# VC mod1
tibble(grp="all", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
# VC mod2
mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
# VC mod3
mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
# VC mod4
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.A
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>% coef(unconstrained=FALSE, allCoef=TRUE)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% names,
mod4.nlme.varStruct.B %>% names,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.varStruct.A
mod4.nlme.varStruct.A %>% names
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.A
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB %>% names,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB %>% names,
stringsAsFactors=FALSE)
mod4.nlme.VC
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE)
mod4.nlme.VC
mod4.nlme.varStruct.A$grpA
mod4.nlme.varStruct.B$grpB
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% select(grpA),
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE)
mod4.nlme.VC
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A %>% select(grpA),
mod4.nlme.varStruct.B %>% select(grpB),
stringsAsFactors=FALSE)
mod4.nlme.VC
# VC mod4
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
tibble::enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE)
mod4.nlme.VC
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.VC
mod4.nlme.VC %>%
left_join(x=., y=mod4.varStructA, by="grpA") %>%
left_join(x=., y=mod4.varStructB, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod4.varStructA
mod4.nlme.VC %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
#rename(grpA=Var1, grpB=Var2)
left_join(x=., y=mod4.nlme.varStruct.A, by=c("Var1"="grpA")
)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2)
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.VC
print(mod4.nlme.VC)
