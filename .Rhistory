x
expand.grid(X=mat2$label, Y=mat2$label) %>%
left_join(x  = .,
y  = mat2,
by = c("X"="label"))
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_)
x
x <- expand.grid(X=mat2$label, Y=mat2$label) %>%
x <- expand.grid(X=mat2$label, Y=mat2$label) %>%
expand.grid(X=mat2$label, Y=mat2$label)
expand.grid(X=mat2$label, Y=mat2$label) %>%
left_join(x  = .,
y  = mat2,
by = c("X"="label"))
x <- expand.grid(X=mat2$label, Y=mat2$label) %>%
x <- mat2 %>%
expand.grid(X=.$label, Y=.$label)
mat2 %>%
expand.grid(X=.$label, Y=.$label)
x <- expand.grid(X=mat2$label, Y=mat2$label) %>% as_tibble()
x
x <- x %>%
x <- left_join(x=x, y=mat2, by=c("X"="label")) %>%
x
pacman::p_load(dplyr, purrr, tibble, tidyr, # data handling
ggplot2, viridis,            # plot
nlme, lme4, glmmTMB, sommer, # mixed modelling
AICcmodavg, broom.mixed)     # mixed model extractions
{
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = density %>% as.factor) %>%
mutate(date_densf = interaction(date, densf)) # needed for mod5
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf))
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date),
varIdent(form=~1|densf)))
mod5.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date_densf))
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod5.nlme.VC <- mod5.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
separate(grp, sep="[.]", into=c("grpA","grpB")) %>%
mutate(sigma         = mod5.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
} # get nlme VC from het diag example
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield, -densf) %>%
mutate(label=paste0(date_densf,".",block))
mat2 <- setup %>%
left_join(x  = .,
y  = mod2.nlme.VC %>% dplyr::select(-StandardError),
by = c("date"="grp"))
mat2
x <- expand.grid(X=mat2$label, Y=mat2$label) %>% as_tibble()
x <- left_join(x=x, y=mat2, by=c("X"="label")) %>%
)
x <- left_join(x=x, y=mat2, by=c("X"="label")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
x
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Z), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=sort(unique(MAT$Variance)))
pacman::p_load(dplyr, purrr, tibble, tidyr, # data handling
ggplot2, viridis,            # plot
nlme, lme4, glmmTMB, sommer, # mixed modelling
AICcmodavg, broom.mixed)     # mixed model extractions
{
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = density %>% as.factor) %>%
mutate(date_densf = interaction(date, densf)) # needed for mod5
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf))
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date),
varIdent(form=~1|densf)))
mod5.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date_densf))
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod5.nlme.VC <- mod5.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
separate(grp, sep="[.]", into=c("grpA","grpB")) %>%
mutate(sigma         = mod5.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
} # get nlme VC from het diag example
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield, -densf) %>%
mutate(label=paste0(date_densf,".",block))
mat2 <- setup %>%
left_join(x  = .,
y  = mod2.nlme.VC %>% dplyr::select(-StandardError),
by = c("date"="grp"))
MAT <- expand.grid(X=mat2$label, Y=mat2$label) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="label")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Z), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=sort(unique(MAT$Variance)))
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=sort(unique(MAT$Variance)))
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield, -densf) %>%
mutate(label=paste0(date_densf,".",block),
number=1:n())
setup
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield, -densf) %>%
mutate(label=paste0(date_densf,".",block),
nID=1:n())
mat2 <- setup %>%
left_join(x  = .,
y  = mod2.nlme.VC %>% dplyr::select(-StandardError),
by = c("date"="grp"))
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT
left_join(x=MAT, y=mat2, by=c("X"="nID"))
pacman::p_load(dplyr, purrr, tibble, tidyr, # data handling
ggplot2, viridis,            # plot
nlme, lme4, glmmTMB, sommer, # mixed modelling
AICcmodavg, broom.mixed)     # mixed model extractions
{
dat <- agridat::mcconway.turnip %>%
as_tibble() %>%
mutate(densf = density %>% as.factor) %>%
mutate(date_densf = interaction(date, densf)) # needed for mod5
mod1.nlme <- nlme::lme(fixed   = yield ~ gen * date * densf,
random  = ~ 1|block,
weights = NULL, # default, i.e. homoscedastic errors
data    = dat)
mod2.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date))
mod3.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|densf))
mod4.nlme <- mod1.nlme %>%
update(weights = varComb(varIdent(form=~1|date),
varIdent(form=~1|densf)))
mod5.nlme <- mod1.nlme %>%
update(weights = varIdent(form=~1|date_densf))
mod1.nlme.VC <- tibble(grp="homoscedastic", varStruct=1) %>%
mutate(sigma         = mod1.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod2.nlme.VC <- mod2.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod2.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod3.nlme.VC <- mod3.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
mutate(sigma         = mod3.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
mod4.nlme.varStruct.A <- mod4.nlme$modelStruct$varStruct$A %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpA", value="varStructA")
mod4.nlme.varStruct.B <- mod4.nlme$modelStruct$varStruct$B %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grpB", value="varStructB")
mod4.nlme.VC <- expand.grid(mod4.nlme.varStruct.A$grpA,
mod4.nlme.varStruct.B$grpB,
stringsAsFactors=FALSE) %>%
rename(grpA=Var1, grpB=Var2) %>%
left_join(x=., y=mod4.nlme.varStruct.A, by="grpA") %>%
left_join(x=., y=mod4.nlme.varStruct.B, by="grpB") %>%
mutate(sigma         = mod4.nlme$sigma) %>%
mutate(StandardError = sigma*varStructA*varStructB) %>%
mutate(Variance      = StandardError^2)
mod5.nlme.VC <- mod5.nlme$modelStruct$varStruct %>%
coef(unconstrained=FALSE, allCoef=TRUE) %>%
enframe(name="grp", value="varStruct") %>%
separate(grp, sep="[.]", into=c("grpA","grpB")) %>%
mutate(sigma         = mod5.nlme$sigma) %>%
mutate(StandardError = sigma*varStruct) %>%
mutate(Variance      = StandardError^2)
} # get nlme VC from het diag example
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield, -densf) %>%
mutate(label=paste0(date_densf,".",block),
nID=1:n())
mat2 <- setup %>%
left_join(x  = .,
y  = mod2.nlme.VC %>% dplyr::select(-StandardError),
by = c("date"="grp"))
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="nID")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=sort(unique(MAT$Variance)))
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=round(sort(unique(MAT$Variance))),2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL, breaks=round(sort(unique(MAT$Variance)),2))
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% round(2) %>% unique %>% sort)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% round(4) %>% unique %>% sort)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% round(3) %>% unique %>% sort)
MAT$Variance %>% round(3)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort %>% round(3))
MAT$Variance %>% unique %>% sort %>% round(3)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort %>% round(4))
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01))
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.box.just = "left")
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.box.just = "right")
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="A", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="B", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="C", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("date"="grp"))
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="nID")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
MAT
mod3.nlme.VC %>% dplyr::select(-StandardError)
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("density"="grp"))
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("densf"="grp"))
setup <- dat %>%
filter(gen=="Barkant") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield) %>%
mutate(label=paste0(date_densf,".",block),
nID=1:n())
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("densf"="grp"))
mat2
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="nID")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
setup <- dat %>%
filter(block="B1") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield) %>%
mutate(label=paste0(date_densf,".",block),
nID=1:n())
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("densf"="grp"))
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="nID")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
setup <- dat %>%
filter(block=="B1") %>%
arrange(date, density) %>%
dplyr::select(-gen, -yield) %>%
mutate(label=paste0(date_densf,".",block),
nID=1:n())
mat2 <- setup %>%
left_join(x  = .,
y  = mod3.nlme.VC %>% dplyr::select(-StandardError),
by = c("densf"="grp"))
MAT <- expand.grid(X=mat2$nID, Y=mat2$nID) %>% as_tibble()
MAT <- left_join(x=MAT, y=mat2, by=c("X"="nID")) %>%
mutate(Variance = case_when(X==Y~Variance, TRUE~NA_real_))
library(ggplot2)
ggplot(data=MAT, aes(x=X, y=Y)) +
geom_tile(aes( fill=Variance), color="grey") +
# geom_text(aes(label=Z), color="black") +
scale_y_reverse() + coord_fixed() + theme_void() +
scale_fill_viridis(option="D", na.value="white",
guide="legend", name=NULL,
breaks= MAT$Variance %>% unique %>% sort,
labels = scales::number_format(accuracy = 0.01)) +
theme(legend.text.align = 1)
